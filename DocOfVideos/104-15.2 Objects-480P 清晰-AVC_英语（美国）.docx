Objects are an important concept in  software engineering. An object is a   value that behaves like what it's supposed  to represent. Let me show you an example.  There's a module called datetime, which represents  things like dates and times. And from that,   we can import date. Now date is what's called a  class. And when I create an instance of a date,   I do that by calling the class. So if  I create a date, 2015, February 20th,   that's a date. Another date is the date of your  freedom, which in this course and this semester,   is on May the 12th when you take your final exam.
Now, an object is supposed to behave like   the value that it represents. So it should be  the case that if I combine today and freedom,   for instance, by computing how long it is  between freedom and today, I should get a   reasonable representation. Something that  tells me these things are dates that I'm   subtracting from one or another. There are 81  days left until you're free of this course.  The primary mechanism by which objects have  behavior is through their attributes. And you   access the attribute of an object through a dot  expression. So you can get the year of today,   or the month of today by asking for its year  or its month attribute, using a dot expression.   We'll talk exactly about how dot expressions get  evaluated when we do a deeper introduction of the   object system in Python. But for now, you should  realize what one of these expressions means.   This is a name. It could be any expression that  evaluates to an object. And then you have a dot,   and then the name of the attribute that you  want to look up. In addition to attributes   that are bound to values, you're going to have  attributes that are bound to functions. Those   are called methods. So a method is anything that  you access using a dot expression and then called   like a function. The strftime method of a date is  a way of formatting that date as a string. Why is   it called strftime? Well, that's a historical  accident, somebody named this strftime long ago   and so we still use that name today. What strftime  does is it takes in a string that describes how I   want to display this date. Today is what's being  displayed. And so this method is invoked on today,   in order to give me a string representation  that says Friday, February 20, where the %A   corresponds to Friday, %B corresponds to February,  %d corresponds to 20. Now, notice that up here,   I never said that this was a Friday. I never  even said that the way you say February is   F-e-b-r-u-a-r-y. It's just part of what it  means to be a date, to be able to generate   things like the name of the weekday, or the name  of the month. And so that's what I mean when I   talk about objects behaving like the things they  represent. So objects represent information. They   consist of data and behavior bundled together to  create abstractions. Objects can represent things,   but also properties of things or interactions  or processes. They're an extremely general   concept. Anything that has attributes can be  represented as an object. A type of object is   called a class. Classes are first-class values  in Python, they can be passed in as arguments   to functions. And objects are the heart of  object-oriented programming, which is an   approach to programming that allows us to organize  large programs using a central metaphor, that a   large program isn't just one big thing. It's a  bunch of individual objects communicating with   each other by sending messages back and forth.
Now in order to convincingly use this metaphor   throughout the large program, we have a special  syntax, and the dot expression is part of that   special syntax that helps us improve the  readability or composition of our programs.  In Python, every value is an object. Every value  has attributes, including numbers and strings.   A lot of data manipulation actually happens  through object methods. And we're going to   look at several of those today. Functions are  meant to do one thing. So the well-designed   function has a single purpose. You pass in  some arguments, you get some return value.   Objects are different. They represent something  that may have lots of different behavior bundled   together. Dates don't just do one thing, they're  used in many different ways. So objects do many   related things. And they can have multiple  methods, each one of which is like a function.
