Let's finish our restaurant search program  by reading in some files. But first,   let's pick a default notion of similarity. Let's  say that the similarity between two restaurants   is the number of people that reviewed them  both. So reviewed_both takes a restaurant r,   and another restaurant s, and returns the  length of the list of r's reviewers that   are also s's reviewers. That's just one notion  of similarity. Two restaurants are similar if   the same group of people reviews them both. So  now we need to make sure that a restaurant has   reviewers. And we'll read those from a file.  Instead of creating three restaurants by hand,   we'll read all the restaurants. For line in open  restaurants.json will iterate through all the   lines in the file. Here's the file. This format  is called JSON or javascript object notation,   which can be read by Python, just by  importing that JSON module and calling   json.load string on the line. That gives us a  dictionary with keys, open, URL, neighborhoods,   etc. In order to construct a restaurant,  we need to pass in the name, the stars,   and we don't want the number of reviews. Instead,  we want the list of reviewers. That's going to be   complicated to compute. So let's give it a  name. The reviewers is what we get when we   look through all the reviews and find the user  ids of the people that reviewed this restaurant.   I think we're going to have to read through  all the reviews first, and then look up the   reviews for the restaurant. And recall that the  reviews are each given a business id which also   appears in restaurants.json. So we'll use that  to look up the reviewers. So this dictionary,   reviewers_for_restaurant has to be built by  going through every line in the reviews file,   constructing a Python dictionary from the  json line. Which business is it? Well,   we get the business id. And if we've never seen  this business before, then I think we should put   that business into this dictionary. And the value  associated with that business id should be a list   of all the users that reviewed it. Let's use  their user ids because that's all we know about   the users. Otherwise, if we've seen this before,  then looking up reviewers for restaurant biz   will give us a list to which we can append that  same value. Every time we create a restaurant,   it's added to the restaurant.all_list. And  that means we should be able to search for   Thai food using real businesses. Oh, we had  a bug here where I was talking too much and   I forgot to assign reviewers. And now it works.  This says Thai Basil Cuisine is similar to Gypsy's   Trattoria Italiano and Top Dog. Are those  restaurants really similar? Well, they're   similar in the sense that students go there. So  I think we should change this to something like,   shares reviewers with. Folks who go to Thai Noodle  II also go to La Cascada Taqueria. Folks who go to   Jasmine Thai, which used to be on the north side  before it closed, also review other restaurants   on the north side. Interesting. So it looks like  we're done building our restaurant search engine.
