Lambda expressions create new procedures  in Scheme. So lambda expressions evaluate   to anonymous procedures. They have the  following special form syntax as a lambda,   and I write down the formal parameters in  parentheses. And then I give the body of   the procedure. Lambda is very important in  Scheme. So here are two different equivalent   expressions that define a plus4 procedure. And  bind it to the name plus4. I could just use the   define procedure syntax that we set before. Or  I could just define that the symbol plus4 is   bound to the procedure that takes x and gives  us back x + 4. These combine however we want,   Scheme is totally flexible. So in a call  expression, I could have an operator that's   a combination itself. For instance, I  could write the procedure that adds x   y and z squared should be applied to 1,  2, and 3 to get 1 plus 2 plus 9 is 12.
